atlanta population:
1.db.zipcodes.find()
2.db.zipcodes.aggregate([{$match:{city:{$exists: true}}},{$group:{_id:"$state", "Total Pop": {$sum:"$pop"}}}])
3.db.zipcodes.aggregate([{$match:{state:"GA"}},{$group:{_id:"$state", "Total Pop": {$sum:"$pop"}}}])
4.db.zipcodes.aggregate( [{ $group: { _id: { state: "$state", city: "$city" }, pop: { $sum: "$pop" } } }, { $group: { _id: "$_id.state", TopCityPop: { $avg: "$pop" } } }] )


population by state:

1.db.zipcodes.aggregate({$group:{_id:'$state',population:{$sum:'$pop'}}})

sort and limit
2.db.zipcodes.aggregate[{$group: {_id: '$state',totalPop: {$sum: '$pop'}}}, {$sort: {pop: 1}}, {$limit: 3}]

To group by state and city and sort in descending order
3.db.zipcodes.aggregate([{$match:{state:{$exists: true}}},{$group:{_id:"$state", "Total Pop": {$sum:"$pop"}}},{$limit:3}])


population by city::

1.db.zipcodes.aggregate( [
 { $group: { _id: "$state", totalPop: { $sum: "$pop" } } },
 { $match: { totalPop: { $gte: 10*1000*1000 } } }
 ] )
2.db.zipcodes.aggregate([{$group: {_id: '$city',totalPop: {$sum: '$pop'}}}, {$sort: {pop: 1}}, {$limit: 3}])

3.db.zipcodes.aggregate([{$match:{city:{$exists: true}}},{$group:{_id:"$city", "Total Pop": {$sum:"$pop"}}},{$limit:3}])
4.

bonus:
1.db.zipcodes.aggregate( [
   { $group: { _id: { state: "$state", city: "$city" }, pop: { $sum: "$pop" } } },
   { $group: { _id: "$_id.state", avgCityPop: { $avg: "$pop" } } }] )

